#
# React
#

snippet ir "Import React" b
import React from 'react'
endsnippet

snippet sfc "Stateless Functional Component" b
const $1 = (\{${2}\}) => {
	return (
		$4		
	)
}
$1.propTypes = {
	$3
}

endsnippet

snippet red "reduce"
$1.reduce((p, $2) => {
	$4
}, $3)${0}

endsnippet

snippet caf "const arrow function"
const $1 = ($2) => {
	$3
}${0}

endsnippet

snippet aaf "anonymous arrow function" i
($1) => {
	$2
}${0}

endsnippet

snippet t "Tag"
<${1}>${2}</$1>
endsnippet

snippet tn "Tag with new line"
<${1}${2: className=${3}}>
	${0}
</$1>
endsnippet

snippet cn "className"
className={$1}${0}
endsnippet

snippet r "return"
return $1${0}
endsnippet

snippet pts "PropTypes string"
PropTypes.string${0}
endsnippet

snippet ptsr "PropTypes string required"
PropTypes.string.isRequired${0}
endsnippet

snippet pto "PropTypes object"
PropTypes.object${0}
endsnippet

snippet ptor "PropTypes object required"
PropTypes.object.isRequired${0}
endsnippet

snippet de "debugger;"
debugger;${0}
endsnippet

snippet d "<div>"
<div${1: className=$2}>
	$0
</div> ${0}
endsnippet

snippet if "if statement"
if ($1) {
	$2
} ${0}
endsnippet

snippet pp "pass prop (identity)"
$1={$1}${0}
endsnippet

snippet p "pass prop"
$1={$2}
endsnippet

snippet (n "parens with new line" i
(
	$1
) ${0}
endsnippet


snippet {n "braces with new line" i
{
	$1
}${0}
endsnippet

snippet st "string interpolation" i
\$\{$1\}$2${0}
endsnippet

snippet oa "Object.assign"
Object.assign({$1}, $2) ${0}
endsnippet

snippet i "import" b
import $1 from '$2' ${0}
endsnippet

snippet di "Destructured Import" b
import \{ $1 \} from '$2' ${0}

endsnippet
#
# console methods
#

snippet dir "console.dir"
console.dir(${1}) ${0}
endsnippet

snippet clv
console.log('$1: ', $1) ${0}
endsnippet

snippet clvj
console.log('$1: ', $1.toJSON()) ${0}
endsnippet

snippet cl*
console.log('**************************') ${0}
endsnippet
